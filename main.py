'''Задача 1 (просто) "Арифметика":

Напишите в начале программы однострочный комментарий: "1st program".
Выведите на экран(в консоль) результат: возведение числа 9 в степень 0.5, после умножение на 5.
Предполагаемый результат: 15.0


Задача 2 (просто) "Логика":

Напишите в начале программы однострочный комментарий: "2nd program".
Убедитесь в том что 9.99 больше 9.98 и 1000 не равно 1000.1 одновременно, выведете результат на экран(в консоль)
 Предполагаемый результат: True


Задача 3 (средне) "Школьная загадка":

Напишите в начале программы однострочный комментарий: "3rd program".
Выведите на экран(в консоль) 2 умноженное на 2 плюс 2 без приоритета.
Выведите на экран(в консоль) 2 умноженное на 2 плюс 2 с приоритетом для сложения.
Выведите на экран(в консоль) результат сравнения этих двух выражений.
Предполагаемый результат (с использованием ==): False


Задача 4 (сложно) "Первый после точки":

Напишите в начале программы однострочный комментарий: "4th program".
Дана строка '123.456'.
Вывести на экран первую цифру после запятой - 4.
Начало алгоритма решения:

Преобразуйте в строку в дробное число. ('123.456' -> 123.456)
Умножьте на 10, чтобы сместить 4 в целую часть. (1234.56)
Следующие шаги алгоритма составьте самостоятельно. В них вам понадобится команда int() и остаточное деление на 10.'''



# 1st program
print(int(9 ** 0.5 * 5)) # Возведение в степень и умножение

# 2nd program
print(9.99 > 9.98 and 1000 != 1000.1) # Логическое сравнение
# Я так понял, если стоят логические операторы, то выражение автоматически определяется как bulean.

# 3rd program
result_without_priority = 2 * 2 + 2 # Без приоритета
result_with_priority = 2 * (2 + 2)  # С приоритетом
print(result_without_priority)    # Вывод первого выражения
print(result_with_priority)     # Вывод второго выражения
print(result_without_priority == result_with_priority) # Сравнение
#Я использовал подход через переменные, чтобы результат был читаем и наглядно показывался.

# 4th program
num_str = '123.456'
num = float(num_str)    # Преобразование строки в число
shifted_num = int(num * 10) # Сдвиг точки
first_digit_after_dot = shifted_num % 10 # Извлечение первой цифры после точки
print(first_digit_after_dot) # Вывод цифры

